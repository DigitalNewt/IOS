/*
	NXTSecurity.m
	The implementation classes and methods for the Security web service.
	Generated by SudzC.com
*/

#import "NXTSecurity.h"
				
#import "Soap.h"
	
#import "NXTTicket.h"
#import "NXTSecurityUser.h"

/* Implementation of the service */
				
@implementation NXTSecurity

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"https://salesapi04.dccnotify.com/nxtapi/Security.asmx";
			self.namespace = @"http://www.dccusa.com/NxtApi/";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (NXTSecurity*) service {
		return [NXTSecurity serviceWithUsername:nil andPassword:nil];
	}
	
	+ (NXTSecurity*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[NXTSecurity alloc] initWithUsername:username andPassword:password];
	}

		
	// Returns NXTTicket*
	/* Used to create a Login Ticket to an NXT System */
	- (SoapRequest*) login: (id <SoapDelegate>) handler Company: (NSString*) Company UserName: (NSString*) UserName Password: (NSString*) Password
	{
		return [self login: handler action: nil Company: Company UserName: UserName Password: Password];
	}

	- (SoapRequest*) login: (id) _target action: (SEL) _action Company: (NSString*) Company UserName: (NSString*) UserName Password: (NSString*) Password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: Company forName: @"Company"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: UserName forName: @"UserName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Password forName: @"Password"]];
		NSString* _envelope = [Soap createEnvelope: @"login" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.dccusa.com/NxtApi/login" postData: _envelope deserializeTo: [NXTTicket alloc]];
		[_request send];
		return _request;
	}

	// Returns NXTTicket*
	/* Used to create a Login Ticket to an NXT System if password has not expired. */
	- (SoapRequest*) loginWithPasswordExpirationCheck: (id <SoapDelegate>) handler Company: (NSString*) Company UserName: (NSString*) UserName Password: (NSString*) Password
	{
		return [self loginWithPasswordExpirationCheck: handler action: nil Company: Company UserName: UserName Password: Password];
	}

	- (SoapRequest*) loginWithPasswordExpirationCheck: (id) _target action: (SEL) _action Company: (NSString*) Company UserName: (NSString*) UserName Password: (NSString*) Password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: Company forName: @"Company"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: UserName forName: @"UserName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Password forName: @"Password"]];
		NSString* _envelope = [Soap createEnvelope: @"loginWithPasswordExpirationCheck" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.dccusa.com/NxtApi/loginWithPasswordExpirationCheck" postData: _envelope deserializeTo: [NXTTicket alloc]];
		[_request send];
		return _request;
	}

	// Returns NXTTicket*
	/* Used to create a Login Ticket to an NXT System */
	- (SoapRequest*) loginWithIDs: (id <SoapDelegate>) handler companyID: (NSString*) companyID userID: (NSString*) userID PIN: (NSString*) PIN
	{
		return [self loginWithIDs: handler action: nil companyID: companyID userID: userID PIN: PIN];
	}

	- (SoapRequest*) loginWithIDs: (id) _target action: (SEL) _action companyID: (NSString*) companyID userID: (NSString*) userID PIN: (NSString*) PIN
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: companyID forName: @"companyID"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: userID forName: @"userID"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: PIN forName: @"PIN"]];
		NSString* _envelope = [Soap createEnvelope: @"loginWithIDs" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.dccusa.com/NxtApi/loginWithIDs" postData: _envelope deserializeTo: [NXTTicket alloc]];
		[_request send];
		return _request;
	}

	// Returns NXTTicket*
	/* Used to create a Login Ticket to an NXT System after changing an expired password */
	- (SoapRequest*) ChangeLoginPassword: (id <SoapDelegate>) handler Company: (NSString*) Company UserName: (NSString*) UserName CurrentPassword: (NSString*) CurrentPassword NewPassword: (NSString*) NewPassword
	{
		return [self ChangeLoginPassword: handler action: nil Company: Company UserName: UserName CurrentPassword: CurrentPassword NewPassword: NewPassword];
	}

	- (SoapRequest*) ChangeLoginPassword: (id) _target action: (SEL) _action Company: (NSString*) Company UserName: (NSString*) UserName CurrentPassword: (NSString*) CurrentPassword NewPassword: (NSString*) NewPassword
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: Company forName: @"Company"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: UserName forName: @"UserName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: CurrentPassword forName: @"CurrentPassword"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: NewPassword forName: @"NewPassword"]];
		NSString* _envelope = [Soap createEnvelope: @"ChangeLoginPassword" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.dccusa.com/NxtApi/ChangeLoginPassword" postData: _envelope deserializeTo: [NXTTicket alloc]];
		[_request send];
		return _request;
	}

	// Returns NXTSecurityUser*
	/* Return Security User for the Referenced Ticket */
	- (SoapRequest*) returnSecurityUser: (id <SoapDelegate>) handler TicketID: (NSString*) TicketID
	{
		return [self returnSecurityUser: handler action: nil TicketID: TicketID];
	}

	- (SoapRequest*) returnSecurityUser: (id) _target action: (SEL) _action TicketID: (NSString*) TicketID
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: TicketID forName: @"TicketID"]];
		NSString* _envelope = [Soap createEnvelope: @"returnSecurityUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.dccusa.com/NxtApi/returnSecurityUser" postData: _envelope deserializeTo: [NXTSecurityUser alloc]];
		[_request send];
		return _request;
	}

	// Returns BOOL
	/* Used to invalidate a Ticket created with Login */
	- (SoapRequest*) logout: (id <SoapDelegate>) handler tick: (NXTTicket*) tick
	{
		return [self logout: handler action: nil tick: tick];
	}

	- (SoapRequest*) logout: (id) _target action: (SEL) _action tick: (NXTTicket*) tick
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: tick forName: @"tick"]];
		NSString* _envelope = [Soap createEnvelope: @"logout" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.dccusa.com/NxtApi/logout" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	// Returns NSString*
	/* Return the Version being used on this system. */
	- (SoapRequest*) version: (id <SoapDelegate>) handler
	{
		return [self version: handler action: nil];
	}

	- (SoapRequest*) version: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"version" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.dccusa.com/NxtApi/version" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}


@end
	