/*
	NXTSecurityExample.m
	Provides example and test runs the service's proxy methods.
	Generated by SudzC.com
*/
#import "NXTSecurityExample.h"
#import "NXTSecurity.h"

@implementation NXTSecurityExample

- (void)run {
	// Create the service
	NXTSecurity* service = [NXTSecurity service];
	service.logging = YES;
	// service.username = @"username";
	// service.password = @"password";
	

	// Returns NXTTicket*
	/* Used to create a Login Ticket to an NXT System after changing an expired password */
	[service ChangeLoginPassword:self action:@selector(ChangeLoginPasswordHandler:) Company: @"" UserName: @"" CurrentPassword: @"" NewPassword: @""];

	// Returns NXTTicket*
	/* Used to create a Login Ticket to an NXT System */
	[service login:self action:@selector(loginHandler:) Company: @"" UserName: @"" Password: @""];

	// Returns NXTTicket*
	/* Used to create a Login Ticket to an NXT System */
	[service loginWithIDs:self action:@selector(loginWithIDsHandler:) companyID: @"" userID: @"" PIN: @""];

	// Returns NXTTicket*
	/* Used to create a Login Ticket to an NXT System if password has not expired. */
	[service loginWithPasswordExpirationCheck:self action:@selector(loginWithPasswordExpirationCheckHandler:) Company: @"" UserName: @"" Password: @""];

	// Returns BOOL
	/* Used to invalidate a Ticket created with Login */
	[service logout:self action:@selector(logoutHandler:) tick: [[NXTTicket alloc] init]];

	// Returns NXTSecurityUser*
	/* Return Security User for the Referenced Ticket */
	[service returnSecurityUser:self action:@selector(returnSecurityUserHandler:) TicketID: @""];

	// Returns NSString*
	/* Return the Version being used on this system. */
	[service version:self action:@selector(versionHandler:)];
}

	

// Handle the response from ChangeLoginPassword.
		
- (void) ChangeLoginPasswordHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NXTTicket* result
		NXTTicket* result = (NXTTicket*)value;
	NSLog(@"ChangeLoginPassword returned the value: %@", result);
			
}
	

// Handle the response from login.
		
- (void) loginHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NXTTicket* result
		NXTTicket* result = (NXTTicket*)value;
	NSLog(@"login returned the value: %@", result);
			
}
	

// Handle the response from loginWithIDs.
		
- (void) loginWithIDsHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NXTTicket* result
		NXTTicket* result = (NXTTicket*)value;
	NSLog(@"loginWithIDs returned the value: %@", result);
			
}
	

// Handle the response from loginWithPasswordExpirationCheck.
		
- (void) loginWithPasswordExpirationCheckHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NXTTicket* result
		NXTTicket* result = (NXTTicket*)value;
	NSLog(@"loginWithPasswordExpirationCheck returned the value: %@", result);
			
}
	

// Handle the response from logout.
		
- (void) logoutHandler: (BOOL) value {
			

	// Do something with the BOOL result
		
	NSLog(@"logout returned the value: %@", [NSNumber numberWithBool:value]);
			
}
	

// Handle the response from returnSecurityUser.
		
- (void) returnSecurityUserHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NXTSecurityUser* result
		NXTSecurityUser* result = (NXTSecurityUser*)value;
	NSLog(@"returnSecurityUser returned the value: %@", result);
			
}
	

// Handle the response from version.
		
- (void) versionHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"version returned the value: %@", result);
			
}
	

@end
		